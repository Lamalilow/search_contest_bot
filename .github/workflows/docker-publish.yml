name: Docker

on:
  schedule:
    - cron: '22 8 * * *'
  push:
    branches: [ "master" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "master" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Установка cosign (только для не-PR событий)
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.5.0
        with:
          cosign-release: 'v2.2.4'

      # Настройка QEMU для мультиархитектурных сборок
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # Настройка Buildx для сборки мультиархитектурных образов
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0

      # Логин в Docker Registry (только для не-PR событий)
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Извлечение метаданных для Docker
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Сборка и публикация образа для amd64
      - name: Build and push Docker image for amd64
        id: build-and-push-amd64
        uses: docker/build-push-action@v5.0.0
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-amd64
          platforms: linux/amd64

      # Сборка и публикация образа для arm64
      - name: Build and push Docker image for arm64
        id: build-and-push-arm64
        uses: docker/build-push-action@v5.0.0
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-arm64
          platforms: linux/arm64

      # Создание мультиархитектурного манифеста
      - name: Create and push manifest list
        if: github.event_name != 'pull_request'
        run: |
          docker manifest create ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
            --amend ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-amd64 \
            --amend ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-arm64
          docker manifest push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      # Подпись образа (только для не-PR событий)
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push-amd64.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
